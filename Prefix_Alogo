                                      ***PREFIX ALGORITHM***
#include <bits/stdc++.h>
using namespace std;
int main() {
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++) cin>>arr[i];
    int pref[n]={0};
    pref[0]=arr[0];
    for(int i=1;i<n;i++){
        pref[i]=pref[i-1]+arr[i];
    }
    for(int i=0;i<n;i++){
        cout<<pref[i]<<" ";
    }

    return 0;
}

o/p:
5
1 2 3 4 5
1 3 6 10 15 

                     ********RANGE SUM(sum of elements in that particular range)**************
#include <bits/stdc++.h>
using namespace std;
int main() {
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++) cin>>arr[i];
    int l,r;
    cin>>l>>r;
    int pref[n]={0}; 
    pref[0]=arr[0];
    for(int i=1;i<n;i++){
        pref[i]=pref[i-1]+arr[i];
    }
    cout<<pref[r]-pref[l-1];  //12
    return 0;
}

o/p:
5
1 2 3 4 5
2 4
12



          ****Adding particular value in range of l and r using prefix******
#include <bits/stdc++.h>
using namespace std;
int main() {
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++) cin>>arr[i];
    int l,r,x;
    cin>>l>>r>>x;
    int pref[n+1]={0}; //we take extra 1 space in array for placing +x and -x
    pref[l]+=x; //for multiple queries to overide we use +,-
    //we replace l with +x
    pref[r+1]-=x;
    //we replace r+1 with -x such that we get in that particular range we add x
    for(int i=1;i<n;i++){
        pref[i]=pref[i-1]+pref[i]; // 0 2 2 2 0
    }
    for(int i=0;i<n;i++){
        pref[i]=pref[i]+arr[i]; //adding pref and arr
        //(0 2 2 2 0) + (1 2 3 4 5) ----> 1 4 5 6 5
    }
    for(int i=0;i<n;i++){
        cout<<pref[i]<<" ";
    }
    return 0;
}

o/p:
5
1 2 3 4 5
1 3 2
1 4 5 6 5 


