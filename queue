//MINIMUM MULTIPLICATIONS TO REACH END GFG
int minimumMultiplications(vector<int>& arr, int start, int end) {
        // code here
         int n=arr.size();
        vector<int>vis(1e5,0);
        int mod=1e5;
        queue<pair<int,int>>q;
        q.push({start,0});
        vis[start]=1;
        while(!q.empty()){
            int curr=q.front().first;
            int dist=q.front().second;
            for(int i=0;i<n;i++){
                if(!vis[(curr*arr[i])%mod]){
                    q.push({(curr*arr[i])%mod,dist+1});
                    vis[(curr*arr[i])%mod]=1;
                    
                }
                 if(curr==end)return dist;
            }
             q.pop();
        }
        return -1;
        
    }
